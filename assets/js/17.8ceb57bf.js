(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{283:function(t,a,s){"use strict";s.r(a);var e=s(4),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"javascript的面向对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript的面向对象"}},[t._v("#")]),t._v(" javascript的面向对象")]),t._v(" "),s("h2",{attrs:{id:"_1、什么是对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、什么是对象"}},[t._v("#")]),t._v(" 1、什么是对象")]),t._v(" "),s("p",[t._v("在《面向对象分析与设计》一书中，对对象是这么定义的：对象是可以看得见摸得着的东西；对象是可以理解的东西；对象是可以知道思想或行动的东西。")]),t._v(" "),s("h2",{attrs:{id:"_2、对象的分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、对象的分类"}},[t._v("#")]),t._v(" 2、对象的分类")]),t._v(" "),s("p",[t._v("在各种编程语言中，作者根据不同语言的特性来抽象地描述对象，大致可以分为两类：")]),t._v(" "),s("ul",[s("li",[t._v("一类是通过类来描述对象，如java和c++")]),t._v(" "),s("li",[t._v("一类是通过原型来描述对象，如javascript")])]),t._v(" "),s("h2",{attrs:{id:"_3、对象的特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、对象的特性"}},[t._v("#")]),t._v(" 3、对象的特性")]),t._v(" "),s("h3",{attrs:{id:"_3-1相同点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1相同点"}},[t._v("#")]),t._v(" 3.1相同点")]),t._v(" "),s("p",[t._v("不管是通过类、还是通过原型来描述对象，对象均具有以下特性：")]),t._v(" "),s("ul",[s("li",[t._v("对象具有唯一的标识性")]),t._v(" "),s("li",[t._v("对象是具有状态的")]),t._v(" "),s("li",[t._v("对象是具有行为的")])]),t._v(" "),s("p",[t._v("对象具有唯一的标识性，这是因为每个对象的建立都会在内存中开辟一块独立的内存空间，即使是完全相同的两个对象，它们的内存地址都是不同的，因此我们用全等符号进行判断时就会返回false。这就好比人的身份证一样，即使长得再相似，终归是两个完全独立的个体。")]),t._v(" "),s("p",[t._v("而对象的状态和行为是可以放在一起去理解。在不同的变成语言中，状态和行为分别有不同的名称：")]),t._v(" "),s("ul",[s("li",[t._v("在c++中，状态叫成员变量，行为叫成员函数；")]),t._v(" "),s("li",[t._v("在java中，状态叫属性，行为叫方法；")]),t._v(" "),s("li",[t._v("在javascript中，状态叫属性，行为也叫属性，原因是在js中，函数也是对象的一种。")])]),t._v(" "),s("h3",{attrs:{id:"_3-2差异性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2差异性"}},[t._v("#")]),t._v(" 3.2差异性")]),t._v(" "),s("p",[t._v("javascript相对于其它语言，有着其自己的特色，例如：")]),t._v(" "),s("ul",[s("li",[t._v("高度的动态性，表现在运行时可以动态地添加属性；")]),t._v(" "),s("li",[t._v("给每个对象提供了对应的数据属性和访问器属性，也可以统称为属性描述对象。")])]),t._v(" "),s("p",[t._v("什么是属性描述对象？属性描述对象就是js给每个对象均赋有以下的属性：")]),t._v(" "),s("div",{staticClass:"language-JavaScript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//属性的值")]),t._v("\n    writable"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//属性是否能被赋值")]),t._v("\n    enumerable"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//是否可通过for...in进行枚举")]),t._v("\n    configurable"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//是否能被删除")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 钩子函数，取值时调用")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//钩子函数，赋值时调用")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("看到这里我们是不是就很熟悉了，其实vue的双向数据绑定的原理，就是利用了对象的属性描述对象，在对象创建时利用object.defineProperty方法，给每项数据成员绑定getter和setter属性，从而实现数据绑定。")])])}),[],!1,null,null,null);a.default=r.exports}}]);